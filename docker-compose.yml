# specify version of yaml syntax 
version: "3"

services:
  django-app: # service name to run the docker file
    build:
      context: . 
      args:
        - DEV=true
    ports:
      - "8000:8000"
    volumes:
      - ./django-project:/django-project
    command:
    > 
      sh -c "python3 manage.py collectstatic --noinput && python3 manage.py runserver 0.0.0.0:8000"
    environment:
      - DB_HOST=db # user database connection as define in below db service
      - POSTGRES_DB=db_dev
      - POSTGRES_USER=user_dev
      - POSTGRES_PASSWORD=Password_dev
    depends_on:
      - db

  django-app-dev: # service name to run the docker file
    build:
      context: . # use current directory that running the docker-compose command
      args:
        - DEV=true # set DEV to true for running development env
    ports:
      - "8001:8001" # map port 8000 on local machine to port 8000 on the container
    volumes:
      - ./django-project:/django-project # map dir of local machine to dir on the container
    command: # default command to run if not specify in docker-compose
    > 
      sh -c "python3 manage.py runserver 0.0.0.0:8001 --settings=configs.settings-dev"
    environment:
      - DB_HOST=db # user database connection as define in below db service
      - POSTGRES_DB=db_dev
      - POSTGRES_USER=user_dev
      - POSTGRES_PASSWORD=Password_dev
    depends_on:
      - db

  db:
    image: postgres:15.5-bookworm # use postgres 15.5 on Debian 12
    ports:
      - "5432:5432"
    volumes:
      - dev-db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=db_dev
      - POSTGRES_USER=user_dev
      - POSTGRES_PASSWORD=Password_dev
      - TZ=Asia/Vientiane # set default env time zone to UTC +7
      - PGTZ=Asia/Vientiane # set postgres time zone to UTC +7
      - POSTGRES_HOST_AUTH_METHOD=trust # allow to connect to db from all hosts

volumes:
  dev-db-data:
